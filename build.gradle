plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.1'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'github.com'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

def queryDslVersion = "5.1.0"
def generatedDir = "./src/main/generated"
def buildDir = "./building"

configurations {
//    compileOnly {
//        extendsFrom annotationProcessor
//    }
// QueryDSL과 관련된 라이브러리들이 컴파일 시점에만 필요하도록 설정합니다. 또한, QueryDSL 설정을 컴파일 클래스패스에 추가합니다.
    querydsl.extendsFrom compileClasspath
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springframework.boot:spring-boot-starter-web'


    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // mariaDB
    implementation 'org.mariadb.jdbc:mariadb-java-client:3.1.4'

    // env-hide
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    // security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.security:spring-security-test'

    // jasypt
    implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.5'

    implementation 'javax.xml.bind:jaxb-api:2.3.1'

    // Mapstruct
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

    // token
    implementation 'io.jsonwebtoken:jjwt:0.9.1'

    // validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // email 인증
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-mail', version: '2.6.3'
    implementation 'javax.mail:mail:1.4.7'

    // Spring Context Support
    implementation 'org.springframework:spring-context-support:5.3.9'

    // redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'


    // jedis -> java로 redis control
    implementation 'redis.clients:jedis:5.1.0'

    //aws
    implementation 'com.amazonaws:aws-java-sdk-s3:1.12.683'
    //swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'
    //QueryDsl
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"
    annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

}
// 소스 코드로 인식할 디렉토리에 경로에 Q-Class 파일을 추가
// 이렇게 하면 Q-Class가 일반 Java 클래스처럼 취급되어 컴파일과 실행 시 클래스패스에 포함됨
sourceSets {
    main.java.srcDirs += [generatedDir+"/queryDsl"]
}

tasks.named('test') {
    useJUnitPlatform()
}
tasks.named('bootJar'){
    dependsOn(test)
    mainClass = 'github.com.jbabe.JbaBeApplication'
    destinationDirectory = file(buildDir)
    archivesBaseName = 'jba_ver'
    archiveVersion = "0.0.3"
}
clean {
    delete file(buildDir), file(generatedDir)
}
